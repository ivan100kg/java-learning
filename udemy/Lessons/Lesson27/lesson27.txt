// Исключения и Ошибки

--- java.io ---
    Пакет с классами и итнтерфейсами ввода/вывода.
    File("path")            // абстрактная репрезентация пути к файлу.
    FileInputStream         // создать поток, для чтения из источника
    FileOutputStream        // создать поток, для записи в источник.
    FileNotFoundException   // исключение, файл не найден, может выбрасываться
                               двумя классами выше.
    IOExeption              // могут выбрасываться методами write и read,
                               классами выше, не читается/записывается.
                               
--- Исключения ---
    Иерархия классов:
    Object <--+ 
              |
              +- Throwable  // главный класс для 'выбрасываемых' объектов
                 ^   ^
                 |   Error  // класс Ошибок со своими подклассами
                Exception   // класс Исключений со своими подклассами
                 ^
           RuntimeException // один из основных, имеет множество подклассов
    
    Сабклассы RuntimeException:
    Unchecked exceptions, Java не заставляет их проверять.
    Ткие исключения возникают по вине программиста.
    Можно не объявлять(throws) и не обрабатывать(try-catch).
    Компилятор не в состоянии проверить возможность выброса этих исключений.
    Например NullPointerException - невозможно предугадать, ловить эти
    исключения можно, но не обязательно.

    Сабклассы Exception
    Cheked исключения указ на часть кода, который находится за пределами
    непосредственного контроля программой и который может явл причиной 
    выброса исключений, как правило это работа с внешними источниками - 
    файлы, бд, сеть. Компилятор всегда проверяет возможность выброса искл.
    Эти искл должны быть обязат или объявлены(throws) и/или обработаны(try).

    Если метод 'a' использует внутри себя метод 'b', который может внутри себя
    выбросить checked exception то метод должен:
        1. Или заключить вызов метода b в try/catch блоки
        2. Или/и объявить, что он может выбросить это checked исключение
           или super класс этого исключения - например Exception.

--- try/catch/finnaly ---
    Обработка исключений:
    try {                   // try - 1 block
        code;
    } catch (Exception e) { // перехват исключения, может быть many catch
        code;
    } finally {             // выполняется всегда - 1 block
        code;
    }

--- throws ---
    Выброс исключений
    void abc() throws Exception {}  // говорит компилятору что может 
                                       выбрасываться исключение и что можно
                                       не обрабытывать его обязательно в коде
                                       (для Checked). 


    
    
