// Всё о классе ArrayList

Collections, произошел от List
Может менять длину.

Object
Cамый главный класс в Java. От которого унаследованы все классы.

Creation
ArrayList по умолчанию включает в себя массив объектов класса Object.
Т.е. элементами массва могут быть любые ссылочные типы данных, так как 
все они произошли от Object.
Примитивные типы данных не могут содержаться в ArrayList.
ArrayList list = new ArrayList();                   // ListArray Object
ArrayList<Object> list = new ArrayList<>();         // the same as above
ArrayList<Object> list = new ArrayList<Object>();   // the same as above
ArrayList<String> l1 = new ArrayList<>();   // только String objects
ArrayList<String> l2 = new ArrayList<>(8);  // capacity = 8, может увелич-ся
ArrayList<String> l3 = new ArrayList<>(l1); // из другого листа(разн адреса)

Methods
size()                  // -> int, размер списка(кол-во эл-ов)
add(DataType el)        // -> boolean, добавить в конец списка
add(nt i, DataType el)  // -> boolean, добавить в индекс 'i', остальные сдвиг
addAll(ArrayList a)     // -> boolean, добавить в конец элементы
addAll(int, ArrayList a)// -> boolean, добавить элементы в индекс 'i'
get(int index)          // -> DataType, элемент под индексом 'i'
indexOf(Object el)      // -> int, 1-ый индекс запрашиваемого элелента, else -1
lastIndexOf(Object el)  // -> int, посл индекс запрашиваемого элелента, else -1
set(int i, DataType el) // -> DataType, заменяет элемент под индексом 'i'
remove(Object el)       // -> boolean, удаляет элемент ссылка на кот в параметре
remove(int index)       // -> DataType, удалить элем по индексу 'index'
clear()                 // -> void, удалить все элементы
isEmpty()               // -> boolean, пустой?
contains(Object el)     // -> boolean, есть ли объект в листе?
toString()              // -> String, возвращ строковое предст об
clone()                 // -> Object, сам массив получ нов адрес, но эл-ты те же
toArray()               // -> Object, в Object массив
toArray(DataType[] arr) // -> DataType, массив выбранного типа.
equals(ArrayList l)     // -> boolean, равны если элементы и их порядок одинак
Arrays.asList(DataType[])               // -> List<DataType>, List объект
Collections.sort(ArrayList<DataType>    // -> void, сортировка

Iterator
Iterator<String> it = list.iterator();
while(it.hasNext()){        // приимущество перед foreach, можно удалять эл
    System.out.println(it.next());
}
for (String s : list) {     // the same
    System.out.println(s);
}

wrapper class
У каждого примитивного типа данных есть есть wrapper class 
int - Integer
